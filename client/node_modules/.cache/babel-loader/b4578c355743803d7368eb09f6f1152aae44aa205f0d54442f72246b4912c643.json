{"ast":null,"code":"import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nexport const reviewApi = createApi({\n  reducerPath: 'reviewApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'http://localhost:5000'\n  }),\n  endpoints: builder => ({\n    getReview: builder.query({\n      query: () => `review/`\n    }),\n    getReviewById: builder.query({\n      query: id => `review/${id}`\n    }),\n    createReview: builder.mutation({\n      query: data => ({\n        url: `review/`,\n        method: 'POST',\n        body: data\n      })\n    }),\n    updateReview: builder.mutation({\n      query: data => ({\n        url: `review/${data.id}`,\n        method: 'PUT',\n        body: data\n      })\n    }),\n    deleteReview: builder.mutation({\n      query: id => ({\n        url: `review/${id}`,\n        method: 'DELETE'\n      })\n    })\n  })\n});\nexport const {\n  useGetReviewQuery,\n  useGetReviewByIdQuery,\n  useCreateReviewMutation,\n  useUpdateReviewMutation,\n  useDeleteReviewMutation\n} = reviewApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","reviewApi","reducerPath","baseQuery","baseUrl","endpoints","builder","getReview","query","getReviewById","id","createReview","mutation","data","url","method","body","updateReview","deleteReview","useGetReviewQuery","useGetReviewByIdQuery","useCreateReviewMutation","useUpdateReviewMutation","useDeleteReviewMutation"],"sources":["C:/Users/Nasty/Desktop/courseProject/client/src/services/review.ts"],"sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nexport const reviewApi = createApi({\r\n    reducerPath: 'reviewApi',\r\n    baseQuery: fetchBaseQuery({ baseUrl: 'http://localhost:5000' }),\r\n    endpoints: (builder) => ({\r\n        getReview: builder.query({\r\n            query: () => `review/`\r\n        }),\r\n        getReviewById: builder.query({\r\n            query: (id) => `review/${id}`\r\n        }),\r\n        createReview: builder.mutation({\r\n            query: (data) => ({\r\n                url: `review/`,\r\n                method: 'POST',\r\n                body: data\r\n            }),\r\n        }),\r\n        updateReview: builder.mutation({\r\n            query: (data) => ({\r\n                url: `review/${data.id}`,\r\n                method: 'PUT',\r\n                body: data\r\n            }),\r\n        }),\r\n        deleteReview: builder.mutation({\r\n            query: (id) => ({\r\n                url: `review/${id}`,\r\n                method: 'DELETE',\r\n            }),\r\n        }),\r\n    })\r\n})\r\n\r\nexport const { useGetReviewQuery, useGetReviewByIdQuery, useCreateReviewMutation, useUpdateReviewMutation, useDeleteReviewMutation } = reviewApi"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;AAExE,OAAO,MAAMC,SAAS,GAAGF,SAAS,CAAC;EAC/BG,WAAW,EAAE,WAAW;EACxBC,SAAS,EAAEH,cAAc,CAAC;IAAEI,OAAO,EAAE;EAAwB,CAAC,CAAC;EAC/DC,SAAS,EAAGC,OAAO,KAAM;IACrBC,SAAS,EAAED,OAAO,CAACE,KAAK,CAAC;MACrBA,KAAK,EAAEA,CAAA,KAAO;IAClB,CAAC,CAAC;IACFC,aAAa,EAAEH,OAAO,CAACE,KAAK,CAAC;MACzBA,KAAK,EAAGE,EAAE,IAAM,UAASA,EAAG;IAChC,CAAC,CAAC;IACFC,YAAY,EAAEL,OAAO,CAACM,QAAQ,CAAC;MAC3BJ,KAAK,EAAGK,IAAI,KAAM;QACdC,GAAG,EAAG,SAAQ;QACdC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEH;MACV,CAAC;IACL,CAAC,CAAC;IACFI,YAAY,EAAEX,OAAO,CAACM,QAAQ,CAAC;MAC3BJ,KAAK,EAAGK,IAAI,KAAM;QACdC,GAAG,EAAG,UAASD,IAAI,CAACH,EAAG,EAAC;QACxBK,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEH;MACV,CAAC;IACL,CAAC,CAAC;IACFK,YAAY,EAAEZ,OAAO,CAACM,QAAQ,CAAC;MAC3BJ,KAAK,EAAGE,EAAE,KAAM;QACZI,GAAG,EAAG,UAASJ,EAAG,EAAC;QACnBK,MAAM,EAAE;MACZ,CAAC;IACL,CAAC;EACL,CAAC;AACL,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEI,iBAAiB;EAAEC,qBAAqB;EAAEC,uBAAuB;EAAEC,uBAAuB;EAAEC;AAAwB,CAAC,GAAGtB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}