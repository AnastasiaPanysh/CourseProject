{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// import { Input, Button } from \"@mantine/core\";\n// import { Dropzone, MIME_TYPES } from \"@mantine/dropzone\"; // Импортируйте Dropzone из Mantined\n// import style from \"./style.module.css\";\n// import React, { useState } from \"react\";\n// import { useCreateReviewMutation } from \"../../services/review\";\n\nfunction CreateOperation() {\n  //   const [createReview] = useCreateReviewMutation();\n  //   const [value, setValue] = useState({\n  //     title: \"\",\n  //     name: \"\",\n  //     category: \"\",\n  //     description: \"\",\n  //     grade: \"\",\n  //     genre: \"\",\n  //     imageLink: \"\", // Здесь будет храниться ссылка на изображение\n  //   });\n\n  //   // Обработчик для загрузки изображения\n  //   function handleImageUpload(files: File[]) {\n  //     // Вам нужно отправить файл в Firebase и получить ссылку на него\n  //     // Здесь я предполагаю, что вы используете Firebase Storage для хранения изображений\n  //     // Замените этот код на соответствующий код для Firebase\n  //     const file = files[0];\n  //     const storageRef = firebase.storage().ref(); // Замените firebase на вашу конфигурацию Firebase\n  //     const imageRef = storageRef.child(file.name);\n\n  //     imageRef.put(file).then((snapshot) => {\n  //       snapshot.ref.getDownloadURL().then((downloadURL) => {\n  //         setValue({ ...value, imageLink: downloadURL });\n  //       });\n  //     });\n  //   }\n\n  //   function sendRequest() {\n  //     createReview(value);\n  //   }\n\n  //   function changeInputValue(event) {\n  //     setValue({ ...value, [event.target.name]: event.target.value });\n  //   }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  // <div className={style.wrapper}>\n  //   <h2>Review title</h2>\n  //   <Input name=\"title\" onChange={changeInputValue} placeholder=\"review title\" />\n\n  //   <h2>Name of film/book/game</h2>\n  //   <Input name=\"name\" onChange={changeInputValue} placeholder=\"review name\" />\n\n  //   <h2>Category</h2>\n  //   <Input name=\"category\" onChange={changeInputValue} placeholder=\"review category\" />\n\n  //   <h2>Description</h2>\n  //   <Input name=\"description\" onChange={changeInputValue} placeholder=\"review description\" />\n\n  //   <h2>Grade</h2>\n  //   <Input name=\"grade\" onChange={changeInputValue} placeholder=\"review grade\" />\n\n  //   <h2>Genre</h2>\n  //   <Input name=\"genre\" onChange={changeInputValue} placeholder=\"review genre\" />\n\n  //   {/* Добавьте компонент Dropzone для загрузки изображения */}\n  //   <Dropzone onDrop={handleImageUpload} accept={[MIME_TYPES.image]}>\n  //     {({ over }) => (\n  //       <div\n  //         style={{\n  //           border: `2px dashed ${over ? \"#16a085\" : \"#ccc\"}`,\n  //           borderRadius: \"4px\",\n  //           padding: \"20px\",\n  //           textAlign: \"center\",\n  //         }}\n  //       >\n  //         Drag & drop an image here or click to select\n  //       </div>\n  //     )}\n  //   </Dropzone>\n\n  //   <Button onClick={sendRequest}>GO</Button>\n  // </div>\n  ;\n}\n_c = CreateOperation;\nexport default CreateOperation;\nvar _c;\n$RefreshReg$(_c, \"CreateOperation\");","map":{"version":3,"names":["CreateOperation","_jsxDEV","_Fragment","_c","$RefreshReg$"],"sources":["C:/Users/Nasty/Desktop/itransition/CourseProjectClient/src/components/CreateOperation/index.tsx"],"sourcesContent":["// import { Input, Button } from \"@mantine/core\";\r\n// import { Dropzone, MIME_TYPES } from \"@mantine/dropzone\"; // Импортируйте Dropzone из Mantined\r\n// import style from \"./style.module.css\";\r\n// import React, { useState } from \"react\";\r\n// import { useCreateReviewMutation } from \"../../services/review\";\r\n\r\nfunction CreateOperation() {\r\n//   const [createReview] = useCreateReviewMutation();\r\n//   const [value, setValue] = useState({\r\n//     title: \"\",\r\n//     name: \"\",\r\n//     category: \"\",\r\n//     description: \"\",\r\n//     grade: \"\",\r\n//     genre: \"\",\r\n//     imageLink: \"\", // Здесь будет храниться ссылка на изображение\r\n//   });\r\n\r\n//   // Обработчик для загрузки изображения\r\n//   function handleImageUpload(files: File[]) {\r\n//     // Вам нужно отправить файл в Firebase и получить ссылку на него\r\n//     // Здесь я предполагаю, что вы используете Firebase Storage для хранения изображений\r\n//     // Замените этот код на соответствующий код для Firebase\r\n//     const file = files[0];\r\n//     const storageRef = firebase.storage().ref(); // Замените firebase на вашу конфигурацию Firebase\r\n//     const imageRef = storageRef.child(file.name);\r\n\r\n//     imageRef.put(file).then((snapshot) => {\r\n//       snapshot.ref.getDownloadURL().then((downloadURL) => {\r\n//         setValue({ ...value, imageLink: downloadURL });\r\n//       });\r\n//     });\r\n//   }\r\n\r\n//   function sendRequest() {\r\n//     createReview(value);\r\n//   }\r\n\r\n//   function changeInputValue(event) {\r\n//     setValue({ ...value, [event.target.name]: event.target.value });\r\n//   }\r\n\r\n  return (<></>\r\n    // <div className={style.wrapper}>\r\n    //   <h2>Review title</h2>\r\n    //   <Input name=\"title\" onChange={changeInputValue} placeholder=\"review title\" />\r\n      \r\n    //   <h2>Name of film/book/game</h2>\r\n    //   <Input name=\"name\" onChange={changeInputValue} placeholder=\"review name\" />\r\n      \r\n    //   <h2>Category</h2>\r\n    //   <Input name=\"category\" onChange={changeInputValue} placeholder=\"review category\" />\r\n      \r\n    //   <h2>Description</h2>\r\n    //   <Input name=\"description\" onChange={changeInputValue} placeholder=\"review description\" />\r\n      \r\n    //   <h2>Grade</h2>\r\n    //   <Input name=\"grade\" onChange={changeInputValue} placeholder=\"review grade\" />\r\n      \r\n    //   <h2>Genre</h2>\r\n    //   <Input name=\"genre\" onChange={changeInputValue} placeholder=\"review genre\" />\r\n      \r\n    //   {/* Добавьте компонент Dropzone для загрузки изображения */}\r\n    //   <Dropzone onDrop={handleImageUpload} accept={[MIME_TYPES.image]}>\r\n    //     {({ over }) => (\r\n    //       <div\r\n    //         style={{\r\n    //           border: `2px dashed ${over ? \"#16a085\" : \"#ccc\"}`,\r\n    //           borderRadius: \"4px\",\r\n    //           padding: \"20px\",\r\n    //           textAlign: \"center\",\r\n    //         }}\r\n    //       >\r\n    //         Drag & drop an image here or click to select\r\n    //       </div>\r\n    //     )}\r\n    //   </Dropzone>\r\n\r\n    //   <Button onClick={sendRequest}>GO</Button>\r\n    // </div>\r\n  );\r\n}\r\n\r\nexport default CreateOperation;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA,SAASA,eAAeA,CAAA,EAAG;EAC3B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEE,oBAAQC,OAAA,CAAAC,SAAA,mBAAI;EACV;EACA;EACA;;EAEA;EACA;;EAEA;EACA;;EAEA;EACA;;EAEA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EAAA;AAEJ;AAACC,EAAA,GA3EQH,eAAe;AA6ExB,eAAeA,eAAe;AAAC,IAAAG,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}