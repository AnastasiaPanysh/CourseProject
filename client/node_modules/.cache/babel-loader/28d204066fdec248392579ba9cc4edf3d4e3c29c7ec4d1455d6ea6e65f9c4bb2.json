{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nexport function useUserStorage() {\n  _s();\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    // При загрузке приложения проверяем, есть ли сохраненный JWT-токен\n    const storedToken = sessionStorage.getItem('jwtToken');\n    if (false) {\n      // Проверяем срок действия токена\n      if (true) {\n        // Токен действителен, устанавливаем пользователя\n        setUser({\n          email: 'user?.email',\n          username: 'decodedToken.username'\n        });\n      } else {\n        // Токен истек, очищаем его и пользователя\n        sessionStorage.removeItem('jwtToken');\n        setUser(null);\n      }\n    }\n  }, []);\n\n  //   // Функция для записи пользователя и токена\n  //   const setUserAndToken = (newUser: User, token: string) => {\n  //     sessionStorage.setItem('jwtToken', token);\n  //     setUser({ email: newUser.email, username: newUser.username });\n  //     console.log(user);\n  //   };\n\n  const setUserAndToken = (newUser, token) => {\n    sessionStorage.setItem('jwtToken', token);\n    setUser(prevUser => ({\n      ...prevUser,\n      email: newUser.email,\n      username: newUser.username\n    }));\n\n    // Здесь вы не увидите обновленное значение user\n    console.log(user);\n  };\n\n  // Функция для очистки пользователя и токена\n  const clearUserAndToken = () => {\n    sessionStorage.removeItem('jwtToken');\n    setUser(null);\n  };\n  return {\n    user,\n    setUserAndToken,\n    clearUserAndToken\n  };\n}\n_s(useUserStorage, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");","map":{"version":3,"names":["useState","useEffect","useUserStorage","_s","user","setUser","storedToken","sessionStorage","getItem","email","username","removeItem","setUserAndToken","newUser","token","setItem","prevUser","console","log","clearUserAndToken"],"sources":["C:/Users/Nasty/Desktop/itransition/CourseProjectClient/src/storage/userStorage.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\ninterface User {\r\n    email: string;\r\n  username: string;\r\n  // Добавьте другие поля пользователя по вашим требованиям\r\n}\r\n\r\nexport function useUserStorage() {\r\n  const [user, setUser] = useState<User | null>(null);\r\n\r\n  useEffect(() => {\r\n    // При загрузке приложения проверяем, есть ли сохраненный JWT-токен\r\n    const storedToken = sessionStorage.getItem('jwtToken');\r\n    \r\n    if (false) {\r\n      \r\n      // Проверяем срок действия токена\r\n      if (true) {\r\n        // Токен действителен, устанавливаем пользователя\r\n        setUser({ email: 'user?.email', username: 'decodedToken.username' });\r\n      } else {\r\n        // Токен истек, очищаем его и пользователя\r\n        sessionStorage.removeItem('jwtToken');\r\n        setUser(null);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n//   // Функция для записи пользователя и токена\r\n//   const setUserAndToken = (newUser: User, token: string) => {\r\n//     sessionStorage.setItem('jwtToken', token);\r\n//     setUser({ email: newUser.email, username: newUser.username });\r\n//     console.log(user);\r\n//   };\r\n\r\nconst setUserAndToken = (newUser: User, token: string) => {\r\n    sessionStorage.setItem('jwtToken', token);\r\n    setUser(prevUser => ({ ...prevUser, email: newUser.email, username: newUser.username }));\r\n    \r\n    // Здесь вы не увидите обновленное значение user\r\n    console.log(user);\r\n  };\r\n\r\n  // Функция для очистки пользователя и токена\r\n  const clearUserAndToken = () => {\r\n    sessionStorage.removeItem('jwtToken');\r\n    setUser(null);\r\n  };\r\n\r\n  return {\r\n    user,\r\n    setUserAndToken,\r\n    clearUserAndToken,\r\n\r\n  };\r\n}"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAQ3C,OAAO,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAc,IAAI,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMK,WAAW,GAAGC,cAAc,CAACC,OAAO,CAAC,UAAU,CAAC;IAEtD,IAAI,KAAK,EAAE;MAET;MACA,IAAI,IAAI,EAAE;QACR;QACAH,OAAO,CAAC;UAAEI,KAAK,EAAE,aAAa;UAAEC,QAAQ,EAAE;QAAwB,CAAC,CAAC;MACtE,CAAC,MAAM;QACL;QACAH,cAAc,CAACI,UAAU,CAAC,UAAU,CAAC;QACrCN,OAAO,CAAC,IAAI,CAAC;MACf;IACF;EACF,CAAC,EAAE,EAAE,CAAC;;EAER;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMO,eAAe,GAAGA,CAACC,OAAa,EAAEC,KAAa,KAAK;IACtDP,cAAc,CAACQ,OAAO,CAAC,UAAU,EAAED,KAAK,CAAC;IACzCT,OAAO,CAACW,QAAQ,KAAK;MAAE,GAAGA,QAAQ;MAAEP,KAAK,EAAEI,OAAO,CAACJ,KAAK;MAAEC,QAAQ,EAAEG,OAAO,CAACH;IAAS,CAAC,CAAC,CAAC;;IAExF;IACAO,OAAO,CAACC,GAAG,CAACd,IAAI,CAAC;EACnB,CAAC;;EAED;EACA,MAAMe,iBAAiB,GAAGA,CAAA,KAAM;IAC9BZ,cAAc,CAACI,UAAU,CAAC,UAAU,CAAC;IACrCN,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,OAAO;IACLD,IAAI;IACJQ,eAAe;IACfO;EAEF,CAAC;AACH;AAAChB,EAAA,CAhDeD,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}